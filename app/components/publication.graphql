#import "../shared/course.graphql"
#import "../shared/user.graphql"
#import "../shared/publication.graphql"
#import "../shared/article.graphql"
#import "../shared/sectionFragment.graphql"
#import "../shared/part.graphql"
#import "../shared/searchPart.graphql"

query contentQuery($id: UUID, $versionId: UUID) {
  publication(id: $id) {
    ...publication
    version(versionId: $versionId) {
      id,
      articles {
        ...article
        sections {
          ...sectionFragment
        }
      }
      searchParts {
        ...searchPart
      }
    }
  }
}

query pathFromLastLocation($publicationId: UUID!, $versionId: UUID) {
  pathFromLastLocation(publicationId: $publicationId, versionId: $versionId) {
    id, versionId, articleId, sectionId
  }
}

query publicationsQuery {
  publications {
   id,
   name,
   meta,
   currentVersion {
     id
   }
   files {
     id
   }
  }
}

query userQuery {
  user {
    ...user
  }
}

query courseQuery($id: UUID) {
  course(id: $id) {
    ...course
    enrollments {
      id
      role
      user {
        id
        meta
      }
    },
    config
  }
}

query publicationQuery($id: UUID) {
  publication(id: $id) {
    ...publication
  }
}

mutation createSection($input: CreateSectionInput) {
  createSection(input: $input) {
    section {
      ...sectionFragment
    }
    part {
      ...part
    }
    sections {
      ...sectionFragment
    }
  }
}

mutation createPublication($input: CreatePublicationInput) {
  createPublication(input: $input) {
    ...publication
  }
}

mutation updatePublication($input: UpdatePublicationInput) {
  updatePublication(input: $input) {
    ...publication
  }
}
